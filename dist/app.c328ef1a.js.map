{"version":3,"sources":["upload.js","app.js"],"names":["bytesToSize","bytes","sizes","i","parseInt","Math","floor","log","round","pow","element","tag","classes","content","node","document","createElement","length","classList","add","textContent","noop","upload","selector","options","files","onUpload","input","querySelector","preview","openButton","style","display","multi","setAttribute","accept","Array","isArray","join","insertAdjacentElement","triggerInput","click","changeHandler","event","target","from","innerHTML","forEach","file","type","match","reader","FileReader","onload","src","result","insertAdjacentHTML","name","size","readAsDataURL","removeHandler","dataset","filter","block","closest","console","setTimeout","remove","clearPreview","el","bottom","uploadHandler","querySelectorAll","e","previewInfo","addEventListener"],"mappings":";;ACAA;;AACA,oBAAO,OAAP,EAAgB;AACZiC,EAAAA,KAAK,EAAE,IADK;AAEZE,EAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,MAA1B,CAFI;AAGZT,EAAAA,QAHY,oBAGHD,KAHG,EAGI;AACZwC,IAAAA,OAAO,CAAC1D,GAAR,CAAY,OAAZ,EAAqBkB,KAArB;AACH;AALW,CAAhB;;;;;;;;;ADDA,SAASzB,WAAT,CAAqBC,KAArB,EAA2B;AACvB,MAAMC,KAAK,GAAG,CAAC,OAAD,EAAU,IAAV,EAAe,IAAf,EAAqB,IAArB,EAA2B,IAA3B,CAAd;;AACA,MAAG,CAACD,KAAJ,EAAW;AACP,WAAO,SAAP;AACH;;AACD,MAAME,CAAC,GAAGC,QAAQ,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASN,KAAT,IAAgBI,IAAI,CAACE,GAAL,CAAS,IAAT,CAA3B,CAAD,CAAlB;AACA,SAAOF,IAAI,CAACG,KAAL,CAAWP,KAAK,GAAGI,IAAI,CAACI,GAAL,CAAS,IAAT,EAAeN,CAAf,CAAnB,IAAwC,GAAxC,GAA8CD,KAAK,CAACC,CAAD,CAA1D;AACH;;AAED,IAAMO,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAgC;AAAA,MAA1BC,OAA0B,uEAAhB,EAAgB;AAAA,MAAZC,OAAY;AAC5C,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuBL,GAAvB,CAAb;;AAEA,MAAIC,OAAO,CAACK,MAAZ,EAAoB;AAAA;;AAChB,uBAAAH,IAAI,CAACI,SAAL,EAAeC,GAAf,2CAAsBP,OAAtB;AACH;;AAED,MAAIC,OAAJ,EAAa;AACTC,IAAAA,IAAI,CAACM,WAAL,GAAmBP,OAAnB;AACH;;AAED,SAAOC,IAAP;AACH,CAZD;;AAcA,SAASO,IAAT,GAAgB,CAAE;;AAAA;;AAEX,SAASC,MAAT,CAAgBC,QAAhB,EAAuC;AAAA;;AAAA,MAAbC,OAAa,uEAAH,EAAG;AAC1C,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAMC,QAAQ,wBAAGF,OAAO,CAACE,QAAX,iEAAuBL,IAArC,CAF0C,CAEC;;AAC3C,MAAMM,KAAK,GAAGZ,QAAQ,CAACa,aAAT,CAAuBL,QAAvB,CAAd;AACA,MAAMM,OAAO,GAAGnB,OAAO,CAAC,KAAD,EAAQ,CAAC,SAAD,CAAR,CAAvB;AACA,MAAMoB,UAAU,GAAGpB,OAAO,CAAC,KAAD,EAAQ,CAAC,KAAD,CAAR,EAAiB,SAAjB,CAA1B;AACA,MAAMY,MAAM,GAAGZ,OAAO,CAAC,KAAD,EAAQ,CAAC,KAAD,EAAQ,SAAR,CAAR,EAA4B,WAA5B,CAAtB;AACAY,EAAAA,MAAM,CAACS,KAAP,CAAaC,OAAb,GAAuB,MAAvB;;AAEA,MAAIR,OAAO,CAACS,KAAZ,EAAmB;AACfN,IAAAA,KAAK,CAACO,YAAN,CAAmB,UAAnB,EAA+B,IAA/B;AACH;;AAED,MAAIV,OAAO,CAACW,MAAR,IAAkBC,KAAK,CAACC,OAAN,CAAcb,OAAO,CAACW,MAAtB,CAAtB,EAAsD;AAClDR,IAAAA,KAAK,CAACO,YAAN,CAAmB,QAAnB,EAA6BV,OAAO,CAACW,MAAR,CAAeG,IAAf,CAAoB,GAApB,CAA7B;AACH;;AAEDX,EAAAA,KAAK,CAACY,qBAAN,CAA4B,UAA5B,EAAwCV,OAAxC;AACAF,EAAAA,KAAK,CAACY,qBAAN,CAA4B,UAA5B,EAAwCjB,MAAxC;AACAK,EAAAA,KAAK,CAACY,qBAAN,CAA4B,UAA5B,EAAwCT,UAAxC;;AAEA,MAAMU,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMb,KAAK,CAACc,KAAN,EAAN;AAAA,GAArB;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,QAAI,CAACA,KAAK,CAACC,MAAN,CAAanB,KAAb,CAAmBR,MAAxB,EAAgC;AAC5B;AACH;;AAEDQ,IAAAA,KAAK,GAAGW,KAAK,CAACS,IAAN,CAAWF,KAAK,CAACC,MAAN,CAAanB,KAAxB,CAAR;AACAI,IAAAA,OAAO,CAACiB,SAAR,GAAoB,EAApB,CAN6B,CAML;;AACxBxB,IAAAA,MAAM,CAACS,KAAP,CAAaC,OAAb,GAAuB,QAAvB;AAEAP,IAAAA,KAAK,CAACsB,OAAN,CAAc,UAAAC,IAAI,EAAI;AAClB,UAAI,CAACA,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgB,OAAhB,CAAL,EAA+B;AAC3B;AACH;;AAED,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,UAAAV,KAAK,EAAI;AACrB,YAAMW,GAAG,GAAGX,KAAK,CAACC,MAAN,CAAaW,MAAzB,CADqB,CACY;;AACjC1B,QAAAA,OAAO,CAAC2B,kBAAR,CAA2B,YAA3B,mIAEiDR,IAAI,CAACS,IAFtD,kEAGoBH,GAHpB,sBAGiCN,IAAI,CAACS,IAHtC,2GAKoBT,IAAI,CAACS,IALzB,kDAMczD,WAAW,CAACgD,IAAI,CAACU,IAAN,CANzB;AAUH,OAZD;;AAcAP,MAAAA,MAAM,CAACQ,aAAP,CAAqBX,IAArB;AACH,KAtBD;AAuBH,GAhCD;;AAkCA,MAAMY,aAAa,GAAG,SAAhBA,aAAgB,CAAAjB,KAAK,EAAI;AAC3B,QAAI,CAACA,KAAK,CAACC,MAAN,CAAaiB,OAAb,CAAqBJ,IAA1B,EAAgC;AAC5B;AACH;;AAH0B,QAIpBA,IAJoB,GAIZd,KAAK,CAACC,MAAN,CAAaiB,OAJD,CAIpBJ,IAJoB;AAK3BhC,IAAAA,KAAK,GAAGA,KAAK,CAACqC,MAAN,CAAa,UAAAd,IAAI;AAAA,aAAIA,IAAI,CAACS,IAAL,KAAcA,IAAlB;AAAA,KAAjB,CAAR;;AAEA,QAAG,CAAChC,KAAK,CAACR,MAAV,EAAkB;AACdK,MAAAA,MAAM,CAACS,KAAP,CAAaC,OAAb,GAAuB,MAAvB;AACH;;AAED,QAAM+B,KAAK,GAAGlC,OAAO,CAChBD,aADS,yBACqB6B,IADrB,UAETO,OAFS,CAED,gBAFC,CAAd;AAIAC,IAAAA,OAAO,CAAC1D,GAAR,CAAYwD,KAAZ;AACAA,IAAAA,KAAK,CAAC7C,SAAN,CAAgBC,GAAhB,CAAoB,UAApB;AACA+C,IAAAA,UAAU,CAAC;AAAA,aAAMH,KAAK,CAACI,MAAN,EAAN;AAAA,KAAD,EAAuB,GAAvB,CAAV;AACH,GAlBD;;AAoBA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,EAAE,EAAI;AACvBA,IAAAA,EAAE,CAACtC,KAAH,CAASuC,MAAT,GAAkB,KAAlB;AACAD,IAAAA,EAAE,CAACvB,SAAH,GAAe,2CAAf;AACH,GAHD;;AAKA,MAAMyB,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB1C,IAAAA,OAAO,CAAC2C,gBAAR,CAAyB,iBAAzB,EAA4CzB,OAA5C,CAAoD,UAAA0B,CAAC;AAAA,aAAIA,CAAC,CAACN,MAAF,EAAJ;AAAA,KAArD;AACA,QAAMO,WAAW,GAAG7C,OAAO,CAAC2C,gBAAR,CAAyB,eAAzB,CAApB;AACAE,IAAAA,WAAW,CAAC3B,OAAZ,CAAoBqB,YAApB;AACA1C,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GALD;;AAOAK,EAAAA,UAAU,CAAC6C,gBAAX,CAA4B,OAA5B,EAAqCnC,YAArC;AACAb,EAAAA,KAAK,CAACgD,gBAAN,CAAuB,QAAvB,EAAiCjC,aAAjC;AACAb,EAAAA,OAAO,CAAC8C,gBAAR,CAAyB,OAAzB,EAAkCf,aAAlC;AACAtC,EAAAA,MAAM,CAACqD,gBAAP,CAAwB,OAAxB,EAAiCJ,aAAjC;AACH","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["function bytesToSize(bytes){\r\n    const sizes = ['Bytes', 'KB','MB', 'GB', 'TB'];\r\n    if(!bytes) {\r\n        return '0 Bytes'\r\n    }\r\n    const i = parseInt(Math.floor(Math.log(bytes)/Math.log(1024)));\r\n    return Math.round(bytes / Math.pow(1024, i)) + ' ' + sizes[i];\r\n}\r\n\r\nconst element = (tag, classes = [], content) => {\r\n    const node = document.createElement(tag);\r\n\r\n    if (classes.length) {\r\n        node.classList.add(...classes)\r\n    }\r\n\r\n    if (content) {\r\n        node.textContent = content;\r\n    }\r\n\r\n    return node;\r\n}\r\n\r\nfunction noop() {};\r\n\r\nexport function upload(selector, options = {}){\r\n    let files = [];\r\n    const onUpload = options.onUpload ?? noop; // пустая функция - чтобы не было ошибки если не указана функция\r\n    const input = document.querySelector(selector);\r\n    const preview = element('div', ['preview']);\r\n    const openButton = element('btn', ['btn'], 'Открыть');\r\n    const upload = element('btn', ['btn', 'primary'], 'Загрузить');\r\n    upload.style.display = \"none\";\r\n\r\n    if (options.multi) {\r\n        input.setAttribute('multiple', true);\r\n    }\r\n\r\n    if (options.accept && Array.isArray(options.accept) ) {\r\n        input.setAttribute('accept', options.accept.join(','));\r\n    }\r\n\r\n    input.insertAdjacentElement('afterend', preview);\r\n    input.insertAdjacentElement('afterend', upload);\r\n    input.insertAdjacentElement('afterend', openButton);\r\n\r\n    const triggerInput = () => input.click();\r\n\r\n    const changeHandler = (event) => {\r\n        if (!event.target.files.length) {\r\n            return\r\n        }\r\n\r\n        files = Array.from(event.target.files);\r\n        preview.innerHTML = ''; // обнуляем ранее выбранные картинки при выборе новых ( а не добавляем к ним)\r\n        upload.style.display = \"inline\";\r\n        \r\n        files.forEach(file => {\r\n            if (!file.type.match('image')) {\r\n                return\r\n            }\r\n\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = event => {\r\n                const src = event.target.result; // возвращает закодированное в формате base64 изображение\r\n                preview.insertAdjacentHTML('afterbegin', `\r\n                    <div class=\"preview-image\">\r\n                        <div class=\"preview-remove\" data-name=\"${file.name}\">&times;</div>\r\n                        <img src=\"${src}\" alt=\"${file.name}\"/>\r\n                        <div class=\"preview-info\">\r\n                            <span>${file.name}</span>\r\n                            ${bytesToSize(file.size)}\r\n                        </div>\r\n                    </div>\r\n                `)\r\n            }\r\n\r\n            reader.readAsDataURL(file);\r\n        })\r\n    }\r\n\r\n    const removeHandler = event => {\r\n        if (!event.target.dataset.name) {\r\n            return\r\n        }\r\n        const {name} = event.target.dataset;\r\n        files = files.filter(file => file.name !== name);\r\n\r\n        if(!files.length) {\r\n            upload.style.display = \"none\";\r\n        }\r\n\r\n        const block = preview\r\n            .querySelector(`[data-name =\"${name}\"]`)\r\n            .closest('.preview-image');\r\n\r\n        console.log(block);\r\n        block.classList.add('removing');\r\n        setTimeout(() => block.remove(), 300);\r\n    }\r\n\r\n    const clearPreview = el => {\r\n        el.style.bottom = '4px';\r\n        el.innerHTML = '<div class=\"preview-info=progress\"></div>'\r\n    }\r\n\r\n    const uploadHandler = () => {        \r\n        preview.querySelectorAll('.preview-remove').forEach(e => e.remove());\r\n        const previewInfo = preview.querySelectorAll('.preview-info');\r\n        previewInfo.forEach(clearPreview)\r\n        onUpload(files);\r\n    }\r\n\r\n    openButton.addEventListener('click', triggerInput);\r\n    input.addEventListener('change', changeHandler);\r\n    preview.addEventListener('click', removeHandler);\r\n    upload.addEventListener('click', uploadHandler);\r\n}","import {upload} from './upload';\r\nupload('#file', {\r\n    multi: true,\r\n    accept: ['.png', '.jpg', '.jpeg', '.gif'],\r\n    onUpload(files) {\r\n        console.log('Files', files);\r\n    }\r\n});"]}